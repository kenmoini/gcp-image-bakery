---
- name: Create a storage bucket if it does not exist
  google.cloud.gcp_storage_bucket:
    name: "{{ gcp_target_bucket }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ service_account_file }}"
    state: present
    versioning:
      enabled: no

- name: Create a disk mapped from RHEL8 image
  gcp_compute_disk:
    name: "{{ disk_name }}"
    licenses:
      - https://compute.googleapis.com/compute/v1/projects/vm-options/global/licenses/enable-vmx
    size_gb: 80
    source_image: "{{ image_base }}"
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ service_account_file }}"
    state: present
  register: disk

- name: Create a VPC network
  gcp_compute_network:
    name: "{{ vpc_name }}"
    auto_create_subnetworks: false
    routing_config:
      routing_mode: REGIONAL
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ service_account_file }}"
    state: present
  register: network

- name: Create a subnetwork
  google.cloud.gcp_compute_subnetwork:
    name: "{{ vpc_name }}-subnet"
    region: "{{ gcp_region }}"
    network: "{{ network }}"
    ip_cidr_range: "{{ subnet_cidr }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ service_account_file }}"
    state: present
  register: subnetwork

- name: Create a firewall rule for SSH
  google.cloud.gcp_compute_firewall:
    name: "{{ firewall_name }}"
    network: "{{ network }}"
    priority: 65534
    direction: INGRESS
    allowed:
    - ip_protocol: tcp
      ports:
      - '22'
    target_tags:
    - eph-image-bakery
    source_ranges:
    - "0.0.0.0/0"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ service_account_file }}"
    state: present

- name: Create an IPv4 public IP Address
  gcp_compute_address:
    name: "{{ static_ip_name }}"
    region: "{{ gcp_region }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ service_account_file }}"
    state: present
  register: address

- name: Create temporary directory
  file:
    state: directory
    path: "{{ temporary_path }}"

- name: Create Temporary Private Key Pair
  community.crypto.openssh_keypair:
    path: "{{ temporary_path }}/id_rsa"
    type: rsa
    size: 4096
  register: rsa_key_pair

- name: Create the RHEL8 instance
  gcp_compute_instance:
    name: "{{ vm_name }}"
    min_cpu_platform: Intel Haswell
    machine_type: "{{ vm_size }}"
    disks:
    - auto_delete: 'true'
      boot: 'true'
      source: "{{ disk }}"
    metadata:
      enable-oslogin: FALSE
      block-project-ssh-keys: FALSE
      ssh-keys: |
        kemo:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/UQ6SVJ0Jk/fDfLpecIIIfTe3+Ry+oaF8AFKAZwXJ8xMMmrPcPX1JTb4k/keVPT5liqYLb6pxO9yKUb1fLIKXQj+6OaDFaq7J8O3ad5AjpwMH97pynPtjUnltDIPbMTLOUHMZCrvF/PIn0iQ2lfl48lADD/S/tOPh34TI8fv+miuCO7Gdsk9DqT9SxIRG4oKj7ZKp/PKyWuPheRhJ0KiSeFIHR3dXSJnLiL+JkdBotB4IK78Pygwo6P6Wyl2P4gobkKhy/YuTiSImbaN0G8YMJrUu1EzYQ5QlmNqPKVuFH8te41vxmTX47N5h8vfO9c00YFC5H9mtsPMGXYRTiRkB kemo
        autouser:{{ rsa_key_pair.public_key }} autouser
    network_interfaces:
    - network: "{{ network }}"
      subnetwork: "{{ subnetwork }}"
      access_configs:
      - name: External NAT
        nat_ip: "{{ address }}"
        type: ONE_TO_ONE_NAT
    tags:
      items:
        - eph-image-bakery
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ service_account_file }}"
    state: present

# Have a delay of at least 30s - need to wait for the Login service to start
- name: Wait for SSH to come up
  wait_for: host={{ address.address }} port=22 delay=30 timeout=120
  tags:
    - wait_for_ssh

- name: Add host to groupname
  add_host:
    hostname: "{{ address.address }}"
    groupname: new_instances
    ansible_ssh_private_key_file: "{{ temporary_path }}/id_rsa"
    ansible_ssh_user: autouser
    ansible_ssh_common_args: -o StrictHostKeyChecking=no
    ansible_ssh_extra_args: -o StrictHostKeyChecking=no

- name: Show RHEL8 Instance Details
  debug:
    msg: "The RHEL8 instance is accessible at {{ address.address }}"
